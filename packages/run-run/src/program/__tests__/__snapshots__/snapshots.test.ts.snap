// Bun Snapshot v1, https://goo.gl/fbAQLP

exports[`should match command: "help" 1`] = `
"ü¶ä R U N - R U N: The CLI toolbox to fullstack common scripts in Variable Land üëä

Usage: rr|run-run [options] [command]

Options:
  -v, --version                output the version number
  -h, --help                   display help for command

Commands:
  format|fmt [options]         format the code üé®
  lint [options]               lint the code üßπ
  check|test:static [options]  check format and lint issues ‚úÖ
  clean [options]              delete dirty folders or files such as
                               node_modules, etc üóëÔ∏è
  typecheck|tsc                check if TypeScript code is well typed üé®
  info:pkg [options]           display run-run package.json ‚ÑπÔ∏è
  help [command]               display help for command

Acknowledgment:
- kcd-scripts: for main inspiration
  https://github.com/kentcdodds/kcd-scripts

- peruvian news: in honor to Run Run
  https://es.wikipedia.org/wiki/Run_Run
"
`;

exports[`should match command: "--help" 1`] = `
"ü¶ä R U N - R U N: The CLI toolbox to fullstack common scripts in Variable Land üëä

Usage: rr|run-run [options] [command]

Options:
  -v, --version                output the version number
  -h, --help                   display help for command

Commands:
  format|fmt [options]         format the code üé®
  lint [options]               lint the code üßπ
  check|test:static [options]  check format and lint issues ‚úÖ
  clean [options]              delete dirty folders or files such as
                               node_modules, etc üóëÔ∏è
  typecheck|tsc                check if TypeScript code is well typed üé®
  info:pkg [options]           display run-run package.json ‚ÑπÔ∏è
  help [command]               display help for command

Acknowledgment:
- kcd-scripts: for main inspiration
  https://github.com/kentcdodds/kcd-scripts

- peruvian news: in honor to Run Run
  https://es.wikipedia.org/wiki/Run_Run
"
`;

exports[`should match command: "--version" 1`] = `
"0.0.0-test
"
`;

exports[`should match command: "-v" 1`] = `
"0.0.0-test
"
`;

exports[`should match help message for command "format" 1`] = `
"Usage: rr format|fmt [options]

format the code üé®

Options:
  -c, --check  check if the code is formatted (default: true)
  -f, --fix    format all the code
  -h, --help   display help for command

Under the hood, this command uses the biome CLI to format the code.
"
`;

exports[`should match help message for command "lint" 1`] = `
"Usage: rr lint [options]

lint the code üßπ

Options:
  -c, --check  check if the code is valid (default: true)
  -f, --fix    try to fix all the code
  -h, --help   display help for command

Under the hood, this command uses the biome CLI to lint the code.
"
`;

exports[`should match help message for command "check" 1`] = `
"Usage: rr check|test:static [options]

check format and lint issues ‚úÖ

Options:
  -f, --fix     try to fix issues automatically
  --fix-staged  try to fix staged files only
  -h, --help    display help for command

Under the hood, this command uses the biome CLI to check the code.
"
`;

exports[`should match help message for command "clean" 1`] = `
"Usage: rr clean [options]

delete dirty folders or files such as node_modules, etc üóëÔ∏è

Options:
  --only-dist  delete 'dist' folders only
  --dry-run    outputs the paths that would be deleted
  -h, --help   display help for command

Under the hood, this command uses the rimraf.js to delete dirty folders or files.
"
`;

exports[`should match help message for command "typecheck" 1`] = `
"Usage: rr typecheck|tsc [options]

check if TypeScript code is well typed üé®

Options:
  -h, --help  display help for command

Under the hood, this command uses the TypeScript CLI to check the code.
"
`;

exports[`should match help message for command "info:pkg" 1`] = `
"Usage: rr info:pkg [options]

display run-run package.json ‚ÑπÔ∏è

Options:
  -f, --filter <filter>  lodash get id like to filter info by
  -c, --current          display package.json where run-run will be executed
  -h, --help             display help for command
"
`;

exports[`should match help message for command "tools" 1`] = `
"Usage: rr tools [options] [command]

expose the internal tools üõ†Ô∏è

Options:
  -h, --help      display help for command

Commands:
  biome
  help [command]  display help for command
"
`;

exports[`should match "format" command 1`] = `"biome format --no-errors-on-unmatched --colors=force"`;

exports[`should match "lint" command 1`] = `"biome check --colors=force --formatter-enabled=false"`;

exports[`should match "check" command 1`] = `"biome check --colors=force"`;

exports[`should match "typecheck" command 1`] = `"tsc --noEmit"`;
